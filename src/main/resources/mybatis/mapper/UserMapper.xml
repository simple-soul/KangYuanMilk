<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对sql进行分类隔离,指定对应的mapper接口-->
<mapper namespace="com.springmvc.mapper.UserMapper">

    <insert id="addUser" parameterType="user">
        INSERT INTO `kangyuan`.`user` (
        `user_name`,
        `user_pwd`,
        `user_tel`,
        `user_idcard`,
        `user_head`,
        `user_sex`,
        `user_registerdate`,
        `remark`
        )
        VALUE
        (
        #{user_name},
        #{user_pwd},
        #{user_tel},
        #{user_idcard},
        #{user_head},
        #{user_sex},
        #{user_registerdate},
        #{remark}
        )
        <selectKey keyProperty="user_id" resultType="Int" order="AFTER">
            SELECT @@IDENTITY AS user_id
        </selectKey>
    </insert>

    <select id="findUserByName" parameterType="String" resultType="user">
        <include refid="selectUser"/>
        WHERE user_name = #{user_name}
        <include refid="notDelete_user"/>
    </select>

    <select id="findUserById" parameterType="Int" resultType="user">
        <include refid="selectUser"/>
        WHERE user_id = #{user_id}
        <include refid="notDelete_user"/>
    </select>

    <update id="updateUser" parameterType="user">
        UPDATE
        `kangyuan`.`user`
        SET
        `user_name` = #{user_name},
        `user_pwd` = #{user_pwd},
        `user_tel` = #{user_tel},
        `user_idcard` = #{user_idcard},
        `user_head` = #{user_head},
        `user_sex` = #{user_sex},
        `remark` = #{remark}
        WHERE `user_id` = #{user_id}
        <include refid="notDelete"/>

    </update>

    <select id="findHeadByName" parameterType="String" resultType="String">
        SELECT user.`user_head` FROM USER WHERE `user_name`=#{name}
        <include refid="notDelete"/>
    </select>

    <select id="findAddressById" parameterType="Int" resultType="address">
        SELECT `address_id`, `address_content` FROM address WHERE `user_id` = #{user_id}
        <include refid="notDelete"/>
    </select>

    <select id="findDefaultAddressIdById" parameterType="Int" resultType="Int">
        SELECT `address_id` FROM user WHERE `user_id` = #{user_id}
        <include refid="notDelete"/>
    </select>

    <update id="deleteAddress" parameterType="Int">
        UPDATE `address` SET `isdeleted` = 1 WHERE `address_id`=#{id}
        <include refid="notDelete"/>

    </update>

    <update id="setDefaultAddress" parameterType="defaultAddress">
        UPDATE `user` SET `address_id` = #{address_id} WHERE `user_id`=#{user_id}
        <include refid="notDelete"/>
    </update>

    <insert id="setAddress" parameterType="defaultAddress">
        INSERT INTO `kangyuan`.`address` (
            `address_content`,
            `user_id`
        )
        VALUES
            (
                #{address_content},
                #{user_id}
            )
        <selectKey keyProperty="address_id" resultType="Int" order="AFTER">
            SELECT @@IDENTITY AS address_id
        </selectKey>

    </insert>

    <sql id="selectUser">
        SELECT
            user.`remark`,
            user.`user_head`,
            user.`user_id`,
            user.`user_idcard`,
            user.`user_name`,
            user.`user_pwd`,
            user.`user_registerdate`,
            user.`user_sex`,
            user.`user_tel`,
            address.`address_content`
        FROM USER
            LEFT JOIN address ON user.`address_id` = address.`address_id`
    </sql>

    <sql id="notDelete_user">
        and user.`isdeleted`=0
    </sql>
    <sql id="notDelete">
        and `isdeleted`=0
    </sql>

</mapper>